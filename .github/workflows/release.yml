# GitHub Actions Workflow created for handling the release process based on the draft release prepared
# with the Build workflow. Running the publishPlugin task requires the PUBLISH_TOKEN secret provided.

name: Release
on:
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    env:
      GRADLE_OPTS: -Dorg.gradle.daemon=false
    steps:
      - name: Fetch Sources
        uses: actions/checkout@v3

      - name: Setup Gradle Dependencies Cache
        uses: actions/cache@v3.2.1
        with:
          path: ~/.gradle/caches
          key: ${{ runner.os }}-gradle-caches-${{ hashFiles('**/*.gradle', '**/*.gradle.kts', 'gradle.properties') }}

      - name: Setup Plugin Verifier IDEs Cache
        uses: actions/cache@v3.2.1
        with:
          path: ~/.pluginVerifier/ides
          key: ${{ runner.os }}-plugin-verifier-${{ hashFiles('**/*.gradle', '**/*.gradle.kts', 'gradle.properties') }}

      - uses: Project-Env/project-env-github-action@v1.3.0

      - run: |
          echo "ORG_GRADLE_PROJECT_githubUsername=${{ github.actor }}" >> $GITHUB_ENV
          echo "ORG_GRADLE_PROJECT_githubPassword=${{ secrets.GITHUB_TOKEN }}" >> $GITHUB_ENV

      - name: Update Release
        id: release
        uses: release-drafter/release-drafter@v5.21.1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Export Revision
        id: revision
        run: echo "revision=$(echo '${{ steps.release.outputs.tag_name }}' | cut -c2-)" >> $GITHUB_OUTPUT
        
      - name: Export Artifact Name
        id: artifact
        shell: bash
        run: |
          PROPERTIES="$(gradle properties --console=plain -q)"
          NAME="$(echo "$PROPERTIES" | grep "^pluginName:" | cut -f2- -d ' ')"
          ARTIFACT="${NAME}-${{ steps.revision.outputs.revision }}.zip"
          echo "artifact=$ARTIFACT" >> $GITHUB_OUTPUT

      - name: Run Linters and Test
        run: gradle check -PpluginVersion=${{ steps.revision.outputs.revision }} -PpluginChangelog=${{ steps.release.outputs.body }}

      - name: Verify Plugin Completeness
        run: gradle verifyPlugin -PpluginVersion=${{ steps.revision.outputs.revision }} -PpluginChangelog=${{ steps.release.outputs.body }}

      - name: Build Plugin
        run: gradle buildPlugin -PpluginVersion=${{ steps.revision.outputs.revision }} -PpluginChangelog=${{ steps.release.outputs.body }}

      - name: Verify Binary Compatibility
        run: gradle runPluginVerifier -Pplugin.verifier.home.dir=~/.pluginVerifier -PpluginVersion=${{ steps.revision.outputs.revision }} -PpluginChangelog=${{ steps.release.outputs.body }}

      - name: Upload Release Asset
        id: upload-release-asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.release.outputs.upload_url }}
          asset_path: ./build/distributions/${{ steps.artifact.outputs.artifact }}
          asset_name: ${{ steps.revision.outputs.revision }}
          asset_content_type: application/zip
          
      - name: Publish Plugin
        env:
          PUBLISH_TOKEN: ${{ secrets.PUBLISH_TOKEN }}
        run: gradle publishPlugin -PpluginVersion=${{ steps.revision.outputs.revision }} -PpluginChangelog=${{ steps.release.outputs.body }}